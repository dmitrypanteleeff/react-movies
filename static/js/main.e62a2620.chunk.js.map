{"version":3,"sources":["layout/Header.jsx","layout/Footer.jsx","components/ItemFilm.jsx","components/ListFilms.jsx","components/Preloader.jsx","components/SearchFilm.jsx","layout/Main.jsx","App.js","index.js"],"names":["Header","className","href","id","Footer","Date","getFullYear","ItemFilm","props","title","year","imdbID","type","poster","src","ListFilms","listOfFilms","length","map","itemFilm","Title","Year","Type","Poster","Preloader","SearchFilm","state","search","typeOfFilm","searchCurrentFilm","loadFilms","handleChange","event","setState","target","name","value","handleKey","key","console","log","placeholder","this","onChange","onKeyDown","onClick","checked","React","Component","API_KEY","process","Main","filmList","loading","totalResults","nameOfFilm","fetch","then","response","json","data","Promise","resolve","reject","dataFilms","Search","App","Fragment","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e62a2620.chunk.js","sourcesContent":["function Header() {\n    return (<nav className=\"blue lighten-2\">\n        <div className=\"nav-wrapper\">\n        <a href=\"#\" className=\"brand-logo\">React Movies</a>\n        <ul id=\"nav-mobile\" className=\"right hide-on-med-and-down\">\n            <li><a href=\"!#\">Repo</a></li>\n        </ul>\n        </div>\n    </nav>)\n}\n\nexport default Header","function Footer() {\n    return (\n        <footer className=\"page-footer blue lighten-3\">\n          <div className=\"footer-copyright\">\n            <div className=\"container\">\n            © {new Date().getFullYear()} Copyright Text\n            <a className=\"grey-text text-lighten-4 right\" href=\"#!\">Repo</a>\n            </div>\n          </div>\n        </footer>\n    )\n}\n\nexport default Footer","export function ItemFilm (props) {\n    // console.log('props',props)\n    const {title, year, imdbID, type, poster} = props;\n        return (\n            <div className=\"row\">\n                <div className=\"col s12 m6\">\n                    <div className=\"card card-item\" data-filmId={imdbID}>\n                        <div className=\"card-image card-image-container\">\n                            {\n                                /* https://via.placeholder.com/468x60?text=Visit+Blogging.com+Now */\n                                poster === 'N/A' ? \n                                    <img className=\"card-image-item\" src={`https://via.placeholder.com/300x350?text=${title}`}/>\n                                    :\n                                    <img className=\"card-image-item\" src={poster} />\n\n                            }\n                            \n                        </div>\n                        <div className=\"card-content\">\n                            <div><p>{title}</p></div>\n                            <div className=\"card__info\">\n                                <p>\n                                    {year}\n                                </p>\n                                <p>\n                                    {type}\n                                </p>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        )\n}\n","import { ItemFilm } from './ItemFilm';\n\nexport function ListFilms(props) {\n    // console.log('Список своств ListFilms', props)\n    const { listOfFilms = [] } = props;\n    return (\n        <div className=\"card-image-wrapper\">\n            {listOfFilms.length\n                ? listOfFilms.map((itemFilm) => (\n                      <ItemFilm\n                          key={itemFilm.imdbID}\n                          title={itemFilm.Title}\n                          year={itemFilm.Year}\n                          imdbID={itemFilm.imdbID}\n                          type={itemFilm.Type}\n                          poster={itemFilm.Poster}\n                      />\n                  ))\n                : <h4>Ничего не найдено. Попробуйте найти что-то другое</h4>\n            }\n        </div>\n    );\n}\n","function Preloader () {\n    return (\n        <div className=\"progress\">\n            <div className=\"indeterminate\"></div>\n        </div>\n    )\n}\n\nexport default Preloader","import React from 'react';\n\nclass SearchFilm extends React.Component {\n    constructor(props) {\n        super();\n        console.log('props from', props);\n        console.log(props.loadFilms);\n    }\n    state = {\n        search: '',\n        typeOfFilm: '',\n    };\n    searchCurrentFilm = () => {\n        // console.log(this.state.search);\n        this.props.loadFilms(this.state.search, this.state.typeOfFilm);\n    };\n    handleChange = (event) => {\n        this.setState({ [event.target.name]: event.target.value });\n    };\n    handleKey = (event) => {\n        if (event.key === 'Enter') {\n            this.searchCurrentFilm();\n        }\n    };\n    render() {\n        return (\n            <div className=\"search__container\">\n                <div className=\"search__wrapper\">\n                    <input\n                        placeholder=\"Ищу фильм...\"\n                        type=\"search\"\n                        value={this.state.search}\n                        onChange={(event) =>\n                            this.setState({ search: event.target.value })\n                        }\n                        onKeyDown={this.handleKey}\n                    />\n                    <a\n                        className=\"waves-effect waves-light btn search__btn\"\n                        onClick={this.searchCurrentFilm}\n                    >\n                        Поиск\n                    </a>\n                </div>\n\n                <div className=\"search__type\">\n                    <p>\n                        <label>\n                            <input\n                                className=\"with-gap\"\n                                name=\"typeOfFilm\"\n                                type=\"radio\"\n                                value=\"\"\n                                onChange={this.handleChange}\n                                checked={this.state.typeOfFilm === ''}\n                            />\n                            <span>all</span>\n                        </label>\n                    </p>\n                    <p>\n                        <label>\n                            <input\n                                className=\"with-gap\"\n                                name=\"typeOfFilm\"\n                                type=\"radio\"\n                                value=\"movie\"\n                                onChange={this.handleChange}\n                                checked={this.state.typeOfFilm === 'movie'}\n                            />\n                            <span>movie</span>\n                        </label>\n                    </p>\n                    <p>\n                        <label>\n                            <input\n                                className=\"with-gap\"\n                                name=\"typeOfFilm\"\n                                type=\"radio\"\n                                value=\"series\"\n                                onChange={this.handleChange}\n                                checked={this.state.typeOfFilm === 'series'}\n                            />\n                            <span>series</span>\n                        </label>\n                    </p>\n                    <p>\n                        <label>\n                            <input\n                                className=\"with-gap\"\n                                name=\"typeOfFilm\"\n                                type=\"radio\"\n                                value=\"game\"\n                                onChange={this.handleChange}\n                                checked={this.state.typeOfFilm === 'game'}\n                            />\n                            <span>game</span>\n                        </label>\n                    </p>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default SearchFilm;\n","\nimport {ListFilms} from \"../components/ListFilms\"\nimport React from \"react\"\nimport Preloader from \"../components/Preloader\";\nimport SearchFilm from \"../components/SearchFilm\";\n// import TypeFilm from \"../components/TypeFilm\";\n\nconst API_KEY = process.env.REACT_APP_API_KEY;\n\nclass Main extends React.Component {\n    state = {\n        filmList: [],\n        loading: false,\n        totalResults: '',    \n    }\n    componentDidMount() {\n        this.setState({loading:true});\n        fetch(`http://www.omdbapi.com/?apikey=${API_KEY}&s=matrix&type=`)\n            .then(response => response.json())\n\n            .then(data => {\n                return new Promise((resolve,reject)=>{\n                console.log('data.Search', data.Search);\n                let dataFilms = data.Search;\n                let totalResults = data.totalResults;\n                this.setState({filmList:dataFilms, loading: false, totalResults: totalResults })\n                // console.log('э',this.state.filmList)\n                resolve(this.setState({filmList:dataFilms, loading: false, totalResults: totalResults }))\n                })\n            })\n    }\n    loadFilms = (nameOfFilm,typeOfFilm) => {\n        console.log('Кликнул');\n        this.setState({loading:true});\n        fetch(`http://www.omdbapi.com/?apikey=${API_KEY}&s=${nameOfFilm}${typeOfFilm !== '' ? `&type=${typeOfFilm}` : ''}`)\n            .then(response => response.json())\n            // .then(data => this.setState({filmList:data.Search, loading: false, totalResults: data.totalResults}))\n            // .then(data => console.log(data.Search))\n\n            .then(data => {\n                return new Promise((resolve,reject)=>{\n                // console.log('data.Search', data.Search);\n                let dataFilms = data.Search;\n                let totalResults = data.totalResults;\n                this.setState({filmList:dataFilms, loading: false, totalResults: totalResults })\n                // console.log('э',this.state.filmList)\n                resolve(this.setState({filmList:dataFilms, loading: false, totalResults: totalResults }))\n                })\n            })\n            \n            // .then(data => {\n            //     return new Promise((resolve,reject)=>{\n            //     console.log('data', data)\n            //     resolve(data)\n            //     })\n            // })\n    }\n    render(){\n        return (\n            <>\n            \n            <main className=\"content container\">\n                <SearchFilm loadFilms={this.loadFilms}/>\n\n\n                {/*\n                <TypeFilm typeOfFilm={this.state.typeOfFilm} />\n\n                 \n                <button onClick={this.loadFilms}>\n                    Подгрузить\n                </button> \n                */}\n                \n                \n                {\n                    this.state.loading ? \n                    <Preloader /> : \n                    <ListFilms listOfFilms={this.state.filmList} />\n                }\n                {/*<ListFilms filmList={this.state.filmList} /> */}\n            </main>\n            </>\n        )\n    }\n    \n}\n\nexport default Main","import React from \"react\";\nimport Header from \"./layout/Header\";\nimport Footer from \"./layout/Footer\";\nimport Main from \"./layout/Main\"\n\nfunction App() {\n  return (\n    <React.Fragment>\n      <Header />\n      <Main />\n      <Footer />\n    </React.Fragment>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}